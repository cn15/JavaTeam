package Sum;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.*;

public class Sum implements Runnable{
	private static Thread tt;
	private static Thread ttt;
	static int t = 1;
	static int s = 0;
	static int j = 0;
	JFrame f = new JFrame();
	static String cbm = "CBM  STUDIO";
	static JLabel num = new JLabel("Number");
	static JLabel sum = new JLabel("SUM           = ");
	static JLabel sum1 = new JLabel("0");
	static JButton start = new JButton("Start");
	static JButton stop = new JButton("Stop");

	Sum() {
		num.setBounds(175, 45, 50, 20);
		sum.setBounds(120, 110, 100, 20);
		sum1.setBounds(255, 110, 100, 20);
		start.setBounds(50, 190, 120, 40);
		stop.setBounds(230, 190, 120, 40);
		f.setTitle(cbm);
		f.add(num);
		f.add(sum);
		f.add(sum1);
		f.add(start);
		f.add(stop);
		f.setSize(400, 300);
		f.setLayout(null);
		f.setVisible(true);
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}

	public void play() {
		start.addActionListener(new ActionListener() {
			Timer timer = new Timer();
			Random rd = new Random();
			

			@Override
			public void actionPerformed(ActionEvent e) {
				start.setEnabled(false);
				stop.setEnabled(true);
			
				
				for (j = 0; s<9999; j++) {
		
					timer.schedule(new TimerTask() {
						  @Override
						  public void run() {
							  int i = rd.nextInt(999);
								s = s + i;
								num.setText(" " + i);
								sum1.setText("" + s);
								num.setText("");
						  }
						}, 2*1000);
					
						
					if (t == 1) {
						j = -1;
						
						continue;
					} else {
						break;
					}
					
				}
			}

		});
		stop.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				t = 0;
				s = 0;
				start.setEnabled(true);
				stop.setEnabled(false);
			}

		});
	}

	public static void main(String args[]) {
		
		Sum a =new Sum();
		a.start();
		a.play();
	}

		@Override
		public void run() {
			try {
				Thread.sleep(3000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		  public void start ()
		   {
		      if (tt == null)
		      {
		         tt = new Thread (this, "kukhanh");
		         tt.start ();
		      }
		   }
	

}
